// js/art.js
import { TYPES } from './constants.js';

/**
 * ArtContext describes how to choose art:
 * { svgTheme: 'realistic'|'fantasy', imagePack: 'none'|'noir'|..., preferImages: boolean }
 */
export function makeArtContext({ svgTheme='realistic', imagePack='none', preferImages=false } = {}){
  return { svgTheme, imagePack, preferImages };
}

// --- SVG generators (unchanged from your version) ---
function artFaction(theme){const fill=theme==='fantasy'?'#7c3aed':'#00c853';const extra=theme==='fantasy'?'<circle cx="72" cy="40" r="8" fill="#a78bfa" />':'';return `<svg viewBox="0 0 120 120" role="img" aria-label="Faction"><rect x="8" y="8" width="104" height="104" rx="16" fill="${fill}" opacity="0.15"/><g fill="${fill}"><circle cx="36" cy="40" r="12"/><rect x="34" y="52" width="4" height="28" rx="2"/><rect x="24" y="60" width="24" height="4" rx="2"/><circle cx="72" cy="36" r="12"/><rect x="70" y="48" width="4" height="30" rx="2"/><rect x="60" y="58" width="24" height="4" rx="2"/></g>${extra}</svg>`;}
function artBadge(theme){const fill=theme==='fantasy'?'#f59e0b':'#22c55e';const ribbon=theme==='fantasy'?'#fcd34d':'#86efac';return `<svg viewBox="0 0 120 120" role="img" aria-label="Badge"><circle cx="60" cy="54" r="28" fill="${fill}"/><path d="M42 84 L54 110 L60 100 L66 110 L78 84" fill="${ribbon}"/></svg>`;}
function artTicket(theme){const fill=theme==='fantasy'?'#60a5fa':'#10b981';return `<svg viewBox="0 0 120 120" role="img" aria-label="Ticket"><g transform="rotate(-18 60 60)"><rect x="28" y="28" width="64" height="64" rx="8" fill="${fill}"/><line x1="36" y1="42" x2="84" y2="42" stroke="#ffffff" stroke-width="3" opacity=".7"/><line x1="36" y1="54" x2="84" y2="54" stroke="#ffffff" stroke-width="3" opacity=".7"/></g></svg>`;}
function artLife(theme){const fill=theme==='fantasy'?'#e11d48':'#6366f1';return `<svg viewBox="0 0 120 120" role="img" aria-label="Life Event"><rect x="20" y="20" width="80" height="80" rx="12" fill="${fill}"/></svg>`;}
function artEconomy(theme){const fill=theme==='fantasy'?'#fbbf24':'#f59e0b';return `<svg viewBox="0 0 120 120" role="img" aria-label="Economy"><g fill="${fill}"><circle cx="46" cy="64" r="14"/><circle cx="70" cy="54" r="14"/><rect x="38" y="78" width="52" height="8" rx="4"/></g></svg>`;}
function artAttorney(theme){const fill=theme==='fantasy'?'#06b6d4':'#0ea5e9';const accent=theme==='fantasy'?'#a5f3fc':'#bae6fd';return `<svg viewBox="0 0 120 120" role="img" aria-label="Attorney"><circle cx="60" cy="60" r="40" fill="${fill}" opacity="0.18"/><path d="M60 30 v42" stroke="${fill}" stroke-width="4" /><path d="M36 50 h48" stroke="${fill}" stroke-width="4" /><path d="M42 50 l-10 15 h20 z" fill="${accent}" /><path d="M78 50 l-10 15 h20 z" fill="${accent}" /><circle cx="60" cy="82" r="3" fill="${fill}" /></svg>`;}

// --- Image pack mapping ---
// Place pack images here (create the files under img/packs/<pack>/)
const PACK_MAP = {
  // type -> filename (per pack)
  // You can change filenames freely; this is just a convention.
  noir: {
    [TYPES.FACTION]:  'img/packs/noir/faction.png',
    [TYPES.BADGE]:    'img/packs/noir/badge.png',
    [TYPES.TICKET]:   'img/packs/noir/ticket.png',
    [TYPES.ECONOMY]:  'img/packs/noir/economy.png',
    [TYPES.ATTORNEY]: 'img/packs/noir/attorney.png',
    [TYPES.LIFE]:     'img/packs/noir/life.png'
  },
  watercolor: {
    [TYPES.FACTION]:  'img/packs/watercolor/faction.png',
    [TYPES.BADGE]:    'img/packs/watercolor/badge.png',
    [TYPES.TICKET]:   'img/packs/watercolor/ticket.png',
    [TYPES.ECONOMY]:  'img/packs/watercolor/economy.png',
    [TYPES.ATTORNEY]: 'img/packs/watercolor/attorney.png',
    [TYPES.LIFE]:     'img/packs/watercolor/life.png'
  },
  neon: {
    [TYPES.FACTION]:  'img/packs/neon/faction.png',
    [TYPES.BADGE]:    'img/packs/neon/badge.png',
    [TYPES.TICKET]:   'img/packs/neon/ticket.png',
    [TYPES.ECONOMY]:  'img/packs/neon/economy.png',
    [TYPES.ATTORNEY]: 'img/packs/neon/attorney.png',
    [TYPES.LIFE]:     'img/packs/neon/life.png'
  }
};

// Utility: background DIV generator
function bgDiv(url){
  return `<div style="width:100%;height:100%;background:url('${url}') center/cover no-repeat;border-radius:12px"></div>`;
}

// Choose an image by pack + type
function packImageFor(type, imagePack){
  if(!imagePack || imagePack==='none') return null;
  const table = PACK_MAP[imagePack];
  return table ? table[type] || null : null;
}

// If card.bg is a string OR an array of strings, return one URL
function pickCardBg(card){
  if(!card || card.bg==null) return null;
  if (Array.isArray(card.bg)){
    if(card.bg.length===0) return null;
    const idx = Math.floor(Math.random()*card.bg.length);
    return card.bg[idx];
  }
  if (typeof card.bg === 'string' && card.bg.trim().length>0) return card.bg;
  return null;
}

export function artForCard(card, ctx){
  const theme = ctx?.svgTheme || 'realistic';
  const preferImages = !!ctx?.preferImages;
  const imagePack = ctx?.imagePack || 'none';

  // 1) Per-card background overrides everything (e.g. life_self.json)
  const explicitBg = pickCardBg(card);
  if(explicitBg){ return bgDiv(explicitBg); }

  // 2) If requested, try an image pack by TYPE
  if(preferImages){
    const packUrl = packImageFor(card.type, imagePack);
    if(packUrl){ return bgDiv(packUrl); }
  }

  // 3) Otherwise use SVGs based on TYPE
  switch(card.type){
    case TYPES.FACTION:  return artFaction(theme);
    case TYPES.BADGE:    return artBadge(theme);
    case TYPES.TICKET:   return artTicket(theme);
    case TYPES.LIFE:     return artLife(theme);
    case TYPES.ECONOMY:  return artEconomy(theme);
    case TYPES.ATTORNEY: return artAttorney(theme);
    default:             return artLife(theme);
  }
}
